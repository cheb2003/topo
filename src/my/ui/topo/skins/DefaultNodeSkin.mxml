<?xml version="1.0"?>
<s:SparkSkin contentBackgroundColor="red" creationComplete="init()" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" width="80" height="60">
    <fx:Metadata>
        <![CDATA[
        [HostComponent("my.ui.topo.Node")]
        ]]>
    </fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.events.EffectEvent;

        private var a1Playing:Boolean;
            private var isMouseOver:Boolean;
            private var isMouseOver1:Boolean;
            private var isInvoke:Boolean;
            private var interval:uint
            private function init():void {
                img.addEventListener(MouseEvent.ROLL_OVER, rollOverHandler, false, 0, true);
                img.addEventListener(MouseEvent.ROLL_OUT, rollOutHandler, false, 0, true);
            }
            private function rollOutHandler(event:MouseEvent):void {
                if(a1Playing) {
                    if(p1.isPlaying) {
                        p1.reverse()
                        hostComponent.depth = Math.abs(Math.random())
                    }
                    if(p2.isPlaying) {
                        p2.reverse()
                        hostComponent.depth = int.MAX_VALUE
                    }
                    a1Playing = false;
                    return
                }
                if(width > 80 && width <= 120) {
                    p2.play()
                    hostComponent.depth = Math.abs(Math.random());
                }


            }
            private function rollOverHandler(event:MouseEvent):void {

                if(a1Playing) {
                    if(p1.isPlaying) {
                        p1.reverse()
                        hostComponent.depth = Math.abs(Math.random())
                    }
                    if(p2.isPlaying) {
                        p2.reverse()
                        hostComponent.depth = int.MAX_VALUE
                    }
                    a1Playing = false;
                    return
                }
                if(width <= 80) {
                    p1.play();
                    hostComponent.depth = int.MAX_VALUE
                }
            }

			protected function effectEndHandler(event:EffectEvent):void
			{
				if (a1Playing)
				{
					a1Playing = false;
					label.includeInLayout = false;
					label.visible = false;
					bc.includeInLayout = true;
					bc.visible = true;
				}
			}
			
			protected function effectStartHandler(event:EffectEvent):void
			{
				if (!a1Playing)
				{
					a1Playing = true;
					label.includeInLayout = true;
					label.visible = true;
					bc.includeInLayout = false;
					bc.visible = false;
				}
			}
			
		]]>
	</fx:Script>
    <fx:Declarations>
        <s:Parallel id="p1">
            <s:Resize target="{this}" id="r1"  widthFrom="{width}" heightFrom="{height}" heightTo="{height + 40}" widthTo="{width + 40}"/>
            <s:Animate id="a1" target="{this}" effectStart="{a1Playing = true}" effectEnd="effectEndHandler(event)">
                <s:SimpleMotionPath property="x" valueFrom="{x}" valueTo="{x - 10}"/>
                <s:SimpleMotionPath property="y" valueFrom="{y}" valueTo="{y - 10}"/>
            </s:Animate>
        </s:Parallel>
        <s:Parallel id="p2">
            <s:Resize target="{this}"  widthFrom="{width}" heightFrom="{height}" heightTo="{height - 40}" widthTo="{width - 40}"/>
            <s:Animate target="{this}" effectStart="effectStartHandler(event)" effectEnd="{a1Playing = false}">
                <s:SimpleMotionPath property="x" valueFrom="{x}" valueTo="{x + 10}"/>
                <s:SimpleMotionPath property="y" valueFrom="{y}" valueTo="{y + 10}"/>
            </s:Animate>
        </s:Parallel>
    </fx:Declarations>

    <s:states>
        <s:State name="normal">
        </s:State>
        <s:State name="selectedAndShowLabel"/>
        <s:State name="selected"/>
        <s:State name="mouseOver"/>
    </s:states>

		<!--<s:Rect left="0" right="0" top="0" bottom="0">
			<s:stroke>
				<s:SolidColorStroke color="#FF0000" />
			</s:stroke>
			<s:fill>
				&lt;!&ndash;- @private &ndash;&gt;
				<s:SolidColor id="bgFill" color="#00ff33" color.mouseOver="#0000ff"/>
			</s:fill>
		</s:Rect>-->
	<s:Image
		source="{hostComponent.imageSource}" id="img" x="{-img.width/2}" y="{-img.height/2}" width="{this.width}" height="{this.height}"/>
    <s:Label id="label" text="test" x="{img.x}" y="{img.y+img.height+5}" width="{img.width}" textAlign="center" />
	<s:BorderContainer id="bc" visible="false" includeInLayout="false" width="200" height="50" x="{img.x+img.width/2-this.width/2-30}" y="{img.y+img.height}"
			cornerRadius="15" borderWeight="0" dropShadowVisible="false">
		<s:Label x="7" y="2" text="user name" />
	</s:BorderContainer>



</s:SparkSkin>
